[{"title":"Hello World","url":"/post/4a17b156.html","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server$ hexo server\nMore info: Server\nGenerate static files$ hexo generate\nMore info: Generating\nDeploy to remote sites$ hexo deploy\nMore info: Deployment\n","tags":["默认"]},{"title":"VIM","url":"/post/VIM.html","content":"[TOC]\n\n此处有一个空白符 &emsp;&emsp;\n本文章是根据一位B站UP主（theCW）的vim笔记\ntheCW视频链接\n&emsp;&emsp;上古神器Vim：从恶言相向到爱不释手 - 终极Vim教程01 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n&emsp;&emsp;上古神器Vim：进阶使用/配置、必备插件介绍 - 终极Vim教程02 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n&emsp;&emsp;「妈妈不会告诉你的Vim技巧」 -Vim终极教程03 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n安装vim\n        \n            \n            \n            CentOS\n        \n        ​                sudo yum -y install vim\n\n        \n\n        \n            \n            \n            Ubuntu\n        \n        ​                sudo apt-get install vim\n\n        \n\n        \n            \n            \n            Arch\n        \n        ​                sudo pacman -S vim\n\n        \n打开VIM&emsp;&emsp;vim或vim  [file]    //把[file]替换成你想打开的文件\n&emsp;&emsp;例子：\n&emsp;&emsp;vim c.txt    //用vim打开名叫c的txt文件                    \nVIM命令(推荐自己尝试一下)&emsp;&emsp;VIM中的模式 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;VIM中有三种比较常用的模式：\n&emsp;&emsp; &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;NORMAL MODE // 普通模式 也是默认打开的模式 大部分命令都是在普通模式下使用的\n &emsp;&emsp; &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;INSERT MODE // 写入模式\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;VISUAL MODE // 可视模式\n​            \n&emsp;&emsp;普通模式中的命令 &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;操作 + 动作 (operation + motion)&lt;/u&gt;\n &emsp;&emsp; &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;例子 dh   d 操作(delete删除) h 动作(左) 连起来就是“向左删除一个字符”\n &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;命令可以连用(带冒号的) 也可以带一个!表示强制…\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;例子   :wq保存(:w)并退出(:q)\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;:q! (quit!)强制退出vim\n &emsp; &emsp; &emsp;&emsp;&emsp;&emsp;ESC键 进入默认模式\n&emsp;&emsp; &emsp;&emsp;进入插入模式 &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;i键 (insert)在文字的前方进入写入模式\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;I键 (大写i)在句子的开头插入\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;a键 (append)在文字的后方进入写入模式\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;A键 (大写A)在句子的末尾插入\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;o键 (open a new line)在当前行的下方开启一个新行并进入插入模式\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;O键 (大写o)在当前行的上方开启一个新行并进入插入模式\n&emsp;&emsp; &emsp;&emsp;命令 &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;:w (write)保存文件\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;:q (quit)退出vim\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;:e [路径] //把[路径]换成你自己的路径 打开文件\n&emsp;&emsp; &emsp;&emsp;操作 &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;d (delete)实际上是剪切\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;dd剪切一行\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;d + 数字 + 方向 剪切[你的方向]的[你的数字]个字符 \n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;例子\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;d3h  向左删除三个字符\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;dh 向左删除一个字符\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;p (paste)粘贴你刚刚复制的字符\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;y (yank)复制\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;例子\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;y3h  向左复制三个字符\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;yh 向左复制一个字符\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;c (change)删除完成后进入写入操作(和d操作相同)\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;0 回到这行的开头\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;u 撤销\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;n 下一条搜索  N 上一条搜索\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;gg 移到开头\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;G 移到最后一行\n​                    \n&emsp;&emsp; &emsp;&emsp;动作 &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;h左    j下    k上    l左    移动光标*（可以按照自己的喜好更改  后面再说）* \n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;如果要一次性移动多行可以输入 [你要多少行] + [你移动光标方向按键]\n &emsp;&emsp; &emsp;&emsp; &emsp; &emsp;&emsp;&emsp;这个也是前面说的操作 + 动作\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;例子 10k 向上(k)移动十行(10)\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;f (find)查找 f + 你要查找的字母\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;fv 查找字母v\n&emsp;&emsp;可视模式(命令和普通模式相同)&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;在普通模式下按下v键进入可视模式(普通可视)\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;在普通模式下按下V键(大写v)进入可视模式(行可视)\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;在普通模式下按下ctrl+v进入可视模式(块可视)\n&emsp;&emsp;&emsp;&emsp;normal指令&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;在可视模式下输入: normal + 你在默认模式下的命令 就会在可视模式下执行(v/ v-line/ v-block都可以 我懒得写其他的例子了 自己尝试吧)\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;例子  :normal Idef-md //把选中行(v-line行可视)的前方插入(I)def-md(中间不能有空格 要不然会把空格一块加上)\n按键重映射 &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;.vimrc是vim的配置文件 后面的配置都是放在这个文件下\n&emsp;&emsp; 打开.vimrc &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;mkdir .vim //创建.vim文件夹.vimrc要放在这个文件夹下\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;cd .vim //进入.vim文件夹\n &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;vim ~/.vimrc //如果没有这个文件的话 vim会打开时自动创建\n&emsp;&emsp;编辑.vimrc &emsp;&emsp; &emsp;&emsp; &emsp;&emsp;注意: 你自己改完键之后上面的操作/ 动作会变成你自己绑的键\nlet mapleader=&quot; &quot;noremap &lt;LEADER&gt;&lt;CR&gt; :noh&lt;CR&gt;syntax onset numberset relativenumberset cursorlineset wrapset showcmdset wildmenuset hlsearchexec &quot;nohlsearch&quot;set incsearchset ignorecaseset smartcaseset nocompatiblefiletype onfiletype indent onfiletype plugin onfiletype plugin indent onset mouse=aset encoding=utf-8let &amp;t_ut=&#x27;&#x27;set expandtabset tabstop=2set shiftwidth=2set softtabstop=2set listset listchars=tab:▸\\ ,trail:▫set scrolloff=5set tw=0set indentexpr=set backspace=indent,eol,startset foldmethod=indentset foldlevel=99let &amp;t_SI = &quot;\\&lt;Esc&gt;]50;CursorShape=1\\x7&quot;let &amp;t_SR = &quot;\\&lt;Esc&gt;]50;CursorShape=2\\x7&quot;let &amp;t_EI = &quot;\\&lt;Esc&gt;]50;CursorShape=0\\x7&quot;set laststatus=2set autochdirau BufReadPost * if line(&quot;&#x27;\\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#x27;\\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g&#x27;\\&quot;&quot; | endif&quot; N上一条搜索 n下一条搜索noremap = nzznoremap + Nzz&quot; j左 k下 l右 i上noremap j &lt;left&gt;noremap l &lt;right&gt;noremap k &lt;down&gt;noremap i &lt;up&gt;noremap J 5&lt;left&gt;noremap L 5&lt;right&gt;noremap K 5&lt;down&gt;noremap I 5&lt;up&gt;noremap &lt;C-j&gt; 0noremap &lt;C-l&gt; $&quot; T进入插入模式noremap t &lt;insert&gt;noremap T I&quot; S保存文件map s &lt;nop&gt;map S :w&lt;CR&gt;map S! :w!&lt;CR&gt;map ; :&quot; 设置vs为向右分屏 vp为向左分屏map vs :set splitright&lt;CR&gt;:vsplit&lt;CR&gt;map vp :set nosplitright&lt;CR&gt;:vsplit&lt;CR&gt;&quot; 设置ss为向上分屏 sp为向下分屏map ss :set nosplitbelow&lt;CR&gt;:split&lt;CR&gt;map sp :set splitbelow&lt;CR&gt;:split&lt;CR&gt;&quot; 键盘上下左右键(不是jkli)更改分屏大小map &lt;down&gt; :res +5&lt;CR&gt;map &lt;up&gt; :res -5&lt;CR&gt;map &lt;right&gt; :vertical resize-5&lt;CR&gt;map &lt;left&gt; :vertical resize+5&lt;CR&gt;&quot; tu打开新标签map tu :tabe&lt;CR&gt;&quot; ctrl-i  ctrl-k 切换标签页map &lt;C-i&gt; :-tabnext&lt;CR&gt;map &lt;C-k&gt; :+tabnext&lt;CR&gt;&quot; 按下sh上下分屏 sv左右分屏map sv &lt;C-w&gt;t&lt;C-w&gt;Hmap sh &lt;C-w&gt;t&lt;C-w&gt;K&quot; 分屏时按空格 + jkli移动窗口光标map &lt;LEADER&gt;i &lt;C-w&gt;kmap &lt;LEADER&gt;k &lt;C-w&gt;jmap &lt;LEADER&gt;j &lt;C-w&gt;hmap &lt;LEADER&gt;l &lt;C-w&gt;l&quot; Q退出文件map Q :q&lt;CR&gt;map Q! :q!&lt;CR&gt;&quot; 重载vimrcmap R :source $MYVIMRC&lt;CR&gt;&quot; 插件(yay!!!)call plug#begin(&#x27;~/.vim/plugged&#x27;)Plug &#x27;vim-airline/vim-airline&#x27;Plug &#x27;connorholyday/vim-snazzy&#x27;&quot; File navigationPlug &#x27;scrooloose/nerdtree&#x27;, &#123; &#x27;on&#x27;: &#x27;NERDTreeToggle&#x27;  &#125;Plug &#x27;Xuyuanp/nerdtree-git-plugin&#x27;&quot; TaglistPlug &#x27;preservim/tagbar&#x27;, &#123; &#x27;on&#x27;: &#x27;TagbarOpenAutoClose&#x27;  &#125;&quot; Error checkingPlug &#x27;dense-analysis/ale&#x27;&quot; Auto CompletePlug &#x27;neoclide/coc.nvim&#x27;, &#123;&#x27;branch&#x27;: &#x27;release&#x27;&#125;&quot; Undo TreePlug &#x27;mbbill/undotree/&#x27;&quot; Other visual enhancementPlug &#x27;nathanaelkane/vim-indent-guides&#x27;Plug &#x27;itchyny/vim-cursorword&#x27;&quot; GitPlug &#x27;rhysd/conflict-marker.vim&#x27;Plug &#x27;tpope/vim-fugitive&#x27;Plug &#x27;mhinz/vim-signify&#x27;Plug &#x27;gisphm/vim-gitignore&#x27;, &#123; &#x27;for&#x27;: [&#x27;gitignore&#x27;, &#x27;vim-plug&#x27;]  &#125;&quot; HTML, CSS, JavaScript, PHP, JSON, etc.Plug &#x27;elzr/vim-json&#x27;Plug &#x27;hail2u/vim-css3-syntax&#x27;Plug &#x27;spf13/PIV&#x27;, &#123; &#x27;for&#x27; :[&#x27;php&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;gko/vim-coloresque&#x27;, &#123; &#x27;for&#x27;: [&#x27;vim-plug&#x27;, &#x27;php&#x27;, &#x27;html&#x27;, &#x27;javascript&#x27;, &#x27;css&#x27;, &#x27;less&#x27;]  &#125;Plug &#x27;pangloss/vim-javascript&#x27;, &#123; &#x27;for&#x27; :[&#x27;javascript&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;mattn/emmet-vim&#x27;&quot; PythonPlug &#x27;vim-scripts/indentpython.vim&#x27;&quot; MarkdownPlug &#x27;iamcco/markdown-preview.nvim&#x27;, &#123; &#x27;do&#x27;: &#123; -&gt; mkdp#util#install_sync() &#125;, &#x27;for&#x27; :[&#x27;markdown&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;dhruvasagar/vim-table-mode&#x27;, &#123; &#x27;on&#x27;: &#x27;TableModeToggle&#x27;  &#125;Plug &#x27;vimwiki/vimwiki&#x27;&quot; BookmarksPlug &#x27;kshenoy/vim-signature&#x27;&quot; Other useful utilitiesPlug &#x27;terryma/vim-multiple-cursors&#x27;Plug &#x27;junegunn/goyo.vim&#x27; &quot; distraction free writing modePlug &#x27;tpope/vim-surround&#x27; &quot; type ysks&#x27; to wrap the word with &#x27;&#x27; or typecs&#x27;` to change &#x27;word&#x27; to `word`Plug &#x27;godlygeek/tabular&#x27; &quot; type ;Tabularize /= to align the =Plug &#x27;gcmt/wildfire.vim&#x27; &quot; in Visual mode, type i&#x27; to select all text in &#x27;&#x27;, or type i) i] i&#125; ipPlug &#x27;scrooloose/nerdcommenter&#x27; &quot; in &lt;space&gt;cc to comment a line&quot; DependenciesPlug &#x27;MarcWeber/vim-addon-mw-utils&#x27;Plug &#x27;kana/vim-textobj-user&#x27;Plug &#x27;fadein/vim-FIGlet&#x27;call plug#end()let g:SnazzyTransparent = 1color snazzy\n","categories":["Linux","工具学习"],"tags":["Linux"]}]