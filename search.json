[{"title":"VIM","url":"/post/bea64271.html","content":"[TOC]\n\n此处有一个空白符   \n本文章是根据一位B站UP主（theCW）的vim笔记\ntheCW视频链接\n  上古神器Vim：从恶言相向到爱不释手\n- 终极Vim教程01 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n  上古神器Vim：进阶使用/配置、必备插件介绍\n- 终极Vim教程02 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n  「妈妈不会告诉你的Vim技巧」\n-Vim终极教程03 - 带你配置属于你自己的最强IDE_哔哩哔哩_bilibili\n安装vim\n\n        \n            \n            \n            CentOS\n        \n        ​ sudo yum -y install vim\n\n        \n\n        \n            \n            \n            Ubuntu\n        \n        ​ sudo apt-get install vim\n\n        \n\n        \n            \n            \n            Arch\n        \n        ​ sudo pacman -S vim\n\n        \n打开VIM\n  vim或vim [file]\n//把[file]替换成你想打开的文件\n  例子：\n  vim c.txt //用vim打开名叫c的txt文件\nVIM命令(推荐自己尝试一下)\n  VIM中的模式\n      VIM中有三种比较常用的模式：\n           NORMAL MODE // 普通模式\n也是默认打开的模式 大部分命令都是在普通模式下使用的\n           INSERT MODE // 写入模式\n           VISUAL MODE // 可视模式\n​\n  普通模式中的命令\n        操作 + 动作 (operation +\nmotion)\n           例子 dh d 操作(delete删除) h 动作(左)\n连起来就是“向左删除一个字符”\n        命令可以连用(带冒号的)\n也可以带一个!表示强制...\n           例子 :wq保存(:w)并退出(:q)\n           :q! (quit!)强制退出vim\n        ESC键 进入默认模式\n     进入插入模式\n        i键 (insert)在文字的前方进入写入模式\n        I键 (大写i)在句子的开头插入\n        a键 (append)在文字的后方进入写入模式\n        A键 (大写A)在句子的末尾插入\n        o键 (open a new\nline)在当前行的下方开启一个新行并进入插入模式\n        O键 (大写o)在当前行的上方开启一个新行并进入插入模式\n     命令\n        :w (write)保存文件\n        :q (quit)退出vim\n       :e [路径] //把[路径]换成你自己的路径 打开文件\n     操作\n        d (delete)实际上是剪切\n           dd剪切一行\n           d + 数字 + 方向\n剪切[你的方向]的[你的数字]个字符\n              例子\n           d3h 向左删除三个字符\n           dh 向左删除一个字符\n        p (paste)粘贴你刚刚复制的字符\n        y (yank)复制\n           例子\n              y3h 向左复制三个字符\n              yh 向左复制一个字符\n        c (change)删除完成后进入写入操作(和d操作相同)\n        0 回到这行的开头\n        u 撤销\n        n 下一条搜索 N 上一条搜索\n       gg 移到开头\n       G 移到最后一行\n​\n     动作\n        h左 j下 k上 l左\n*移动光标**（可以按照自己的喜好更改 后面再说）*\n           如果要一次性移动多行可以输入 [你要多少行] +\n[你移动光标方向按键]\n           这个也是前面说的操作 + 动作\n              例子 10k\n向上(k)移动十行(10)\n        f (find)查找 f + 你要查找的字母\n           fv 查找字母v\n  可视模式(命令和普通模式相同)\n       在普通模式下按下v键进入可视模式(普通可视)\n       在普通模式下按下V键(大写v)进入可视模式(行可视)\n       在普通模式下按下ctrl+v进入可视模式(块可视)\n    normal指令\n       在可视模式下输入: normal +\n你在默认模式下的命令 就会在可视模式下执行(v/\nv-line/ v-block都可以 我懒得写其他的例子了 自己尝试吧)\n         例子 :normal Idef-md\n//把选中行(v-line行可视)的前方插入(I)def-md(中间不能有空格\n要不然会把空格一块加上)\n按键重映射\n        .vimrc是vim的配置文件\n后面的配置都是放在这个文件下\n   打开.vimrc\n        mkdir .vim\n//创建.vim文件夹.vimrc要放在这个文件夹下\n        cd .vim //进入.vim文件夹\n        vim ~/.vimrc //如果没有这个文件的话\nvim会打开时自动创建\n  编辑.vimrc\n        注意: 你自己改完键之后上面的操作/\n动作会变成你自己绑的键\nlet mapleader=&quot; &quot;noremap &lt;LEADER&gt;&lt;CR&gt; :noh&lt;CR&gt;syntax onset numberset relativenumberset cursorlineset wrapset showcmdset wildmenuset hlsearchexec &quot;nohlsearch&quot;set incsearchset ignorecaseset smartcaseset nocompatiblefiletype onfiletype indent onfiletype plugin onfiletype plugin indent onset mouse=aset encoding=utf-8let &amp;t_ut=&#x27;&#x27;set expandtabset tabstop=2set shiftwidth=2set softtabstop=2set listset listchars=tab:▸\\ ,trail:▫set scrolloff=5set tw=0set indentexpr=set backspace=indent,eol,startset foldmethod=indentset foldlevel=99let &amp;t_SI = &quot;\\&lt;Esc&gt;]50;CursorShape=1\\x7&quot;let &amp;t_SR = &quot;\\&lt;Esc&gt;]50;CursorShape=2\\x7&quot;let &amp;t_EI = &quot;\\&lt;Esc&gt;]50;CursorShape=0\\x7&quot;set laststatus=2set autochdirau BufReadPost * if line(&quot;&#x27;\\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#x27;\\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g&#x27;\\&quot;&quot; | endif&quot; N上一条搜索 n下一条搜索noremap = nzznoremap + Nzz&quot; j左 k下 l右 i上noremap j &lt;left&gt;noremap l &lt;right&gt;noremap k &lt;down&gt;noremap i &lt;up&gt;noremap J 5&lt;left&gt;noremap L 5&lt;right&gt;noremap K 5&lt;down&gt;noremap I 5&lt;up&gt;noremap &lt;C-j&gt; 0noremap &lt;C-l&gt; $&quot; T进入插入模式noremap t &lt;insert&gt;noremap T I&quot; S保存文件map s &lt;nop&gt;map S :w&lt;CR&gt;map S! :w!&lt;CR&gt;map ; :&quot; 设置vs为向右分屏 vp为向左分屏map vs :set splitright&lt;CR&gt;:vsplit&lt;CR&gt;map vp :set nosplitright&lt;CR&gt;:vsplit&lt;CR&gt;&quot; 设置ss为向上分屏 sp为向下分屏map ss :set nosplitbelow&lt;CR&gt;:split&lt;CR&gt;map sp :set splitbelow&lt;CR&gt;:split&lt;CR&gt;&quot; 键盘上下左右键(不是jkli)更改分屏大小map &lt;down&gt; :res +5&lt;CR&gt;map &lt;up&gt; :res -5&lt;CR&gt;map &lt;right&gt; :vertical resize-5&lt;CR&gt;map &lt;left&gt; :vertical resize+5&lt;CR&gt;&quot; tu打开新标签map tu :tabe&lt;CR&gt;&quot; ctrl-i  ctrl-k 切换标签页map &lt;C-i&gt; :-tabnext&lt;CR&gt;map &lt;C-k&gt; :+tabnext&lt;CR&gt;&quot; 按下sh上下分屏 sv左右分屏map sv &lt;C-w&gt;t&lt;C-w&gt;Hmap sh &lt;C-w&gt;t&lt;C-w&gt;K&quot; 分屏时按空格 + jkli移动窗口光标map &lt;LEADER&gt;i &lt;C-w&gt;kmap &lt;LEADER&gt;k &lt;C-w&gt;jmap &lt;LEADER&gt;j &lt;C-w&gt;hmap &lt;LEADER&gt;l &lt;C-w&gt;l&quot; Q退出文件map Q :q&lt;CR&gt;map Q! :q!&lt;CR&gt;&quot; 重载vimrcmap R :source $MYVIMRC&lt;CR&gt;&quot; 插件(yay!!!)call plug#begin(&#x27;~/.vim/plugged&#x27;)Plug &#x27;mhinz/vim-startify&#x27;Plug &#x27;vim-airline/vim-airline&#x27;Plug &#x27;ghifarit53/tokyonight-vim&#x27;&quot; File navigationPlug &#x27;scrooloose/nerdtree&#x27;, &#123; &#x27;on&#x27;: &#x27;NERDTreeToggle&#x27;  &#125;Plug &#x27;Xuyuanp/nerdtree-git-plugin&#x27;&quot; TaglistPlug &#x27;preservim/tagbar&#x27;, &#123; &#x27;on&#x27;: &#x27;TagbarOpenAutoClose&#x27;  &#125;&quot; Error checkingPlug &#x27;dense-analysis/ale&#x27;&quot; Auto CompletePlug &#x27;neoclide/coc.nvim&#x27;, &#123;&#x27;branch&#x27;: &#x27;release&#x27;&#125;&quot; Undo TreePlug &#x27;mbbill/undotree/&#x27;&quot; Other visual enhancementPlug &#x27;nathanaelkane/vim-indent-guides&#x27;Plug &#x27;itchyny/vim-cursorword&#x27;&quot; GitPlug &#x27;rhysd/conflict-marker.vim&#x27;Plug &#x27;tpope/vim-fugitive&#x27;Plug &#x27;mhinz/vim-signify&#x27;Plug &#x27;gisphm/vim-gitignore&#x27;, &#123; &#x27;for&#x27;: [&#x27;gitignore&#x27;, &#x27;vim-plug&#x27;]  &#125;&quot; HTML, CSS, JavaScript, PHP, JSON, etc.Plug &#x27;elzr/vim-json&#x27;Plug &#x27;hail2u/vim-css3-syntax&#x27;Plug &#x27;spf13/PIV&#x27;, &#123; &#x27;for&#x27; :[&#x27;php&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;gko/vim-coloresque&#x27;, &#123; &#x27;for&#x27;: [&#x27;vim-plug&#x27;, &#x27;php&#x27;, &#x27;html&#x27;, &#x27;javascript&#x27;, &#x27;css&#x27;, &#x27;less&#x27;]  &#125;Plug &#x27;pangloss/vim-javascript&#x27;, &#123; &#x27;for&#x27; :[&#x27;javascript&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;mattn/emmet-vim&#x27;&quot; PythonPlug &#x27;vim-scripts/indentpython.vim&#x27;&quot; MarkdownPlug &#x27;iamcco/markdown-preview.nvim&#x27;, &#123; &#x27;do&#x27;: &#123; -&gt; mkdp#util#install_sync() &#125;, &#x27;for&#x27; :[&#x27;markdown&#x27;, &#x27;vim-plug&#x27;]  &#125;Plug &#x27;dhruvasagar/vim-table-mode&#x27;, &#123; &#x27;on&#x27;: &#x27;TableModeToggle&#x27;  &#125;Plug &#x27;vimwiki/vimwiki&#x27;&quot; BookmarksPlug &#x27;kshenoy/vim-signature&#x27;&quot; Other useful utilitiesPlug &#x27;terryma/vim-multiple-cursors&#x27;Plug &#x27;junegunn/goyo.vim&#x27; &quot; distraction free writing modePlug &#x27;tpope/vim-surround&#x27; &quot; type ysks&#x27; to wrap the word with &#x27;&#x27; or typecs&#x27;` to change &#x27;word&#x27; to `word`Plug &#x27;godlygeek/tabular&#x27; &quot; type ;Tabularize /= to align the =Plug &#x27;gcmt/wildfire.vim&#x27; &quot; in Visual mode, type i&#x27; to select all text in &#x27;&#x27;, or type i) i] i&#125; ipPlug &#x27;scrooloose/nerdcommenter&#x27; &quot; in &lt;space&gt;cc to comment a line&quot; DependenciesPlug &#x27;MarcWeber/vim-addon-mw-utils&#x27;Plug &#x27;kana/vim-textobj-user&#x27;Plug &#x27;fadein/vim-FIGlet&#x27;call plug#end()set termguicolorslet g:tokyonight_style = &#x27;night&#x27; &quot; available: night, stormlet g:tokyonight_enable_italic = 1let g:tokyonight_transparent_background = 1colorscheme tokyonight&quot; ===&quot; === NERDTree&quot; ===map ff :NERDTreeToggle&lt;CR&gt;let NERDTreeMapOpenExpl = &quot;&quot;let NERDTreeMapUpdir = &quot;&quot;let NERDTreeMapUpdirKeepOpen = &quot;l&quot;let NERDTreeMapOpenSplit = &quot;&quot;let NERDTreeOpenVSplit = &quot;&quot;let NERDTreeMapActivateNode = &quot;i&quot;let NERDTreeMapOpenInTab = &quot;o&quot;let NERDTreeMapPreview = &quot;&quot;let NERDTreeMapCloseDir = &quot;n&quot;let NERDTreeMapChangeRoot = &quot;y&quot;&quot; ==&quot; == NERDTree-git&quot; ==let g:NERDTreeIndicatorMapCustom = &#123;    \\ &quot;Modified&quot;  : &quot;✹&quot;,    \\ &quot;Staged&quot;    : &quot;✚&quot;,    \\ &quot;Untracked&quot; : &quot;✭&quot;,    \\ &quot;Renamed&quot;   : &quot;➜&quot;,    \\ &quot;Unmerged&quot;  : &quot;═&quot;,    \\ &quot;Deleted&quot;   : &quot;✖&quot;,    \\ &quot;Dirty&quot;     : &quot;✗&quot;,    \\ &quot;Clean&quot;     : &quot;✔&quot;,    \\ &quot;Unknown&quot;   : &quot;?&quot;    \\ &#125;&quot; ===&quot; === ale&quot; ===let b:ale_linters = [&#x27;pylint&#x27;]let b:ale_fixers = [&#x27;autopep8&#x27;, &#x27;yapf&#x27;]&quot; ===&quot; === Taglist&quot; ===map &lt;silent&gt; T :TagbarOpenAutoClose&lt;CR&gt;&quot; ===&quot; === MarkdownPreview&quot; ===let g:mkdp_auto_start = 0let g:mkdp_auto_close = 1let g:mkdp_refresh_slow = 0let g:mkdp_command_for_global = 0let g:mkdp_open_to_the_world = 0let g:mkdp_open_ip = &#x27;&#x27;let g:mkdp_browser = &#x27;chromium&#x27;let g:mkdp_echo_preview_url = 0let g:mkdp_browserfunc = &#x27;&#x27;let g:mkdp_preview_options = &#123;    \\ &#x27;mkit&#x27;: &#123;&#125;,    \\ &#x27;katex&#x27;: &#123;&#125;,    \\ &#x27;uml&#x27;: &#123;&#125;,    \\ &#x27;maid&#x27;: &#123;&#125;,    \\ &#x27;disable_sync_scroll&#x27;: 0,    \\ &#x27;sync_scroll_type&#x27;: &#x27;middle&#x27;,    \\ &#x27;hide_yaml_meta&#x27;: 1    \\ &#125;let g:mkdp_markdown_css = &#x27;&#x27;let g:mkdp_highlight_css = &#x27;&#x27;let g:mkdp_port = &#x27;&#x27;let g:mkdp_page_title = &#x27;「$&#123;name&#125;」&#x27;&quot; ===&quot; === vim-table-mode&quot; ===map &lt;LEADER&gt;tm :TableModeToggle&lt;CR&gt;&quot; ===&quot; === Python-syntax&quot; ===let g:python_highlight_all = 1&quot; let g:python_slow_sync = 0&quot; ===&quot; === vim-indent-guide&quot; ===let g:indent_guides_guide_size = 1let g:indent_guides_start_level = 2let g:indent_guides_enable_on_vim_startup = 1let g:indent_guides_color_change_percent = 1silent! unmap &lt;LEADER&gt;igautocmd WinEnter * silent! unmap &lt;LEADER&gt;ig&quot; ===&quot; === Goyo&quot; ===map &lt;LEADER&gt;gy :Goyo&lt;CR&gt;&quot; ===&quot; === vim-signiture&quot; ===let g:SignatureMap = &#123;        \\ &#x27;Leader&#x27;             :  &quot;m&quot;,        \\ &#x27;PlaceNextMark&#x27;      :  &quot;m,&quot;,        \\ &#x27;ToggleMarkAtLine&#x27;   :  &quot;m.&quot;,        \\ &#x27;PurgeMarksAtLine&#x27;   :  &quot;dm-&quot;,        \\ &#x27;DeleteMark&#x27;         :  &quot;dm&quot;,        \\ &#x27;PurgeMarks&#x27;         :  &quot;dm/&quot;,        \\ &#x27;PurgeMarkers&#x27;       :  &quot;dm?&quot;,        \\ &#x27;GotoNextLineAlpha&#x27;  :  &quot;m&lt;LEADER&gt;&quot;,        \\ &#x27;GotoPrevLineAlpha&#x27;  :  &quot;&quot;,        \\ &#x27;GotoNextSpotAlpha&#x27;  :  &quot;m&lt;LEADER&gt;&quot;,        \\ &#x27;GotoPrevSpotAlpha&#x27;  :  &quot;&quot;,        \\ &#x27;GotoNextLineByPos&#x27;  :  &quot;&quot;,        \\ &#x27;GotoPrevLineByPos&#x27;  :  &quot;&quot;,        \\ &#x27;GotoNextSpotByPos&#x27;  :  &quot;mn&quot;,        \\ &#x27;GotoPrevSpotByPos&#x27;  :  &quot;mp&quot;,        \\ &#x27;GotoNextMarker&#x27;     :  &quot;&quot;,        \\ &#x27;GotoPrevMarker&#x27;     :  &quot;&quot;,        \\ &#x27;GotoNextMarkerAny&#x27;  :  &quot;&quot;,        \\ &#x27;GotoPrevMarkerAny&#x27;  :  &quot;&quot;,        \\ &#x27;ListLocalMarks&#x27;     :  &quot;m/&quot;,        \\ &#x27;ListLocalMarkers&#x27;   :  &quot;m?&quot;        \\ &#125;&quot; ===&quot; === Undotree&quot; ===let g:undotree_DiffAutoOpen = 0map L :UndotreeToggle&lt;CR&gt;\nNEOVIM\n    我的nvim配置是借鉴照抄油管上的devaslife这位大神的配置\n    Effective\nNeovim setup for web development towards 2024\n    我的配置文件\n        t\nt/neovim_config (gitee.com)\n     devaslife的配置文件\n        craftzdog/dotfiles-public:\nMy personal dotfiles (github.com)\n","categories":["Linux","工具学习"],"tags":["Linux"]},{"title":"Hello World","url":"/post/4a17b156.html","content":"Welcome to Hexo! This is your very\nfirst post. Check documentation for\nmore info. If you get any problems when using Hexo, you can find the\nanswer in troubleshooting or\nyou can ask me on GitHub.\nQuick Start\nCreate a new post\n$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server\n$ hexo server\nMore info: Server\nGenerate static files\n$ hexo generate\nMore info: Generating\nDeploy to remote sites\n$ hexo deploy\nMore info: Deployment\n","tags":["默认"]},{"title":"yabai","url":"/post/b2a17991.html","content":"yabai -- skhd -- spacebar\n\nyabai\n\n仓库\nyabai\nskhd\nspacebar\nsketchybar\nborders\n教程\n用Mac不用它，你的Mac白买了\n—— 平铺式窗口管理器yabai\n【yabai】mac下的i3wm，效率更高的窗口管理软件\n【Yabai/窗口管理/桌面美化】这个真的是Mac系统的桌面？Mac下面最好看的窗口管理工具Yabai\n关闭SIP\n\n\nimg\n\n安装\n安装需要brew(mac不自带)没有安装的可以在 brew官网 上安装\nbrew install koekeishiya/formulae/yabaibrew install koekeishiya/formulae/skhdbrew install cmacrae/formulae/spacebar #不推荐用brew install FelixKratz/formulae/sketchybarbrew install FelixKratz/formulae/borders\n安装好后yabai需要运行 sudo yaban --load-sa\n执行 shasum -a 256 $(which yabai)\n来获取hash和yabai安装位置\n编辑/etc/sudoers文件，在末尾加上：\n&lt;你的用户名&gt; ALL=(root) NOPASSWD: sha256:&lt;刚刚获取的hash&gt; &lt;yabai安装位置&gt; --load-sa\n然后把~/.config/yabai/yabairc文件添加两行：\nyabai -m signal --add event=dock_did_restart action=&quot;sudo yabai --load-sa&quot;sudo yabai --load-sa\n运行\nyabai --start-serviceskhd --start-servicebrew services start sketchybarbrew services start borders\n重启\nyabai --stop-service #停止yabaiyabai --start-service #开启yabaiskhd --stop-service #停止skhdskhd --start-service #开启skhdbrew services stop sketchybar #关闭sketchybarbrew services start sketchybar #开启sketchybarbrew services restart sketchybar #重启sketchybarbrew services stop borders #关闭bordersbrew services start borders #开启bordersbrew services restart borders #重启borders\n配置文件\nyabai--skhd--spacebar需要单独放在～/.config/(yabai skihd\nspacebar)下\n\nlike this\n\nfirst使用这个需要删除limelight(已弃用)\nsecond\nMyDotfiles东拼西凑凑成的这个\n键绑定（用的是MyDotfiles）\n\n\n\n（second）按键\n功能\n\n\n\n\nAlt + h\n切换窗口注视（左）\n\n\nAlt + j\n切换窗口注视（下）\n\n\nAlt + k\n切换窗口注视（上）\n\n\nAlt + l\n切换窗口注视（右）\n\n\nShift + Alt + h\n移动同桌面的窗口（左）\n\n\nShift + Alt + j\n移动同桌面的窗口（下）\n\n\nShift + Alt + k\n移动同桌面的窗口（上）\n\n\nShift + Alt + l\n移动同桌面的窗口（右）\n\n\nShift + Command + h\n更改窗口大小（左）\n\n\nShift + Command + j\n更改窗口大小（下）\n\n\nShift + Command + k\n更改窗口大小（上）\n\n\nShift + Command + l\n更改窗口大小（右）\n\n\nShift + Alt + c\n窗口浮动\n\n\n左Ctrl + Alt + 0\n重置窗口大小\n\n\n左Ctrl + Alt + g\n窗口间隙\n\n\nAlt + r\n逆时针旋转窗口\n\n\nShift + Alt + r\n顺时针旋转窗口\n\n\nShift + Alt + x\n同桌面左右翻转窗口\n\n\nShift + Alt + y\n同桌面上下反转窗口\n\n\nShift + 左Ctrl + Alt + h\n显示下一个窗口插入位置（左）\n\n\nShift + 左Ctrl + Alt + j\n显示下一个窗口插入位置（下）\n\n\nShift + 左Ctrl + Alt + k\n显示下一个窗口插入位置（上）\n\n\nShift + 左Ctrl + Alt + l\n显示下一个窗口插入位置（右）\n\n\nShift + Alt + Space\n同桌面的窗口全部浮动\n\n\nShift + Alt + Command + r\n重启yabai\n\n\nAlt + f\n窗口铺满屏幕\n\n\nShift + ALt + f\n窗口全屏\n\n\nAlt + t\n更改窗口分割类型\n\n\nShift + Alt + d\n未知\n\n\nShift + Alt +w\n未知\n\n\nShift + Alt + a\n减少窗口大小（横向）\n\n\nShift + Alt + s\n减少窗口大小（竖向）\n\n\nCommand + Alt + x\n切换桌面（最近）\n\n\nCommand + Alt + z\n切换桌面（上）\n\n\nCommand + Alt + c\n切换桌面（下）\n\n\nAlt + 1\n切换桌面（1）\n\n\nAlt + 2\n切换桌面（2）\n\n\nAlt + 3\n切换桌面（3）\n\n\nAlt + 4\n切换桌面（4）\n\n\nAlt + 5\n切换桌面（5）\n\n\nAlt + 6\n切换桌面（6）\n\n\nAlt + 7\n切换桌面（7）\n\n\nAlt + 8\n切换桌面（8）\n\n\nAlt + 9\n切换桌面（9）\n\n\nAlt + 0\n切换桌面（10）\n\n\nCtrl + n\n融合桌面（上）\n\n\nCtrl + m\n融合桌面（下）\n\n\nShift + Command + Alt + w\n删除空白桌面\n\n\nCtrl + Shift + 1\n将当前窗口融合到桌面（1）\n\n\nCtrl + Shift + 2\n将当前窗口融合到桌面（2）\n\n\nCtrl + Shift + 3\n将当前窗口融合到桌面（3）\n\n\nCtrl + Shift + 4\n将当前窗口融合到桌面（4）\n\n\nCtrl + Shift + 5\n将当前窗口融合到桌面（5）\n\n\nCtrl + Shift + 6\n将当前窗口融合到桌面（6）\n\n\nCtrl + Shift + 7\n将当前窗口融合到桌面（7）\n\n\nCtrl + Shift + 8\n将当前窗口融合到桌面（8）\n\n\nCtrl + Shift + 9\n将当前窗口融合到桌面（9）\n\n\nCtrl + Shift + 0\n将当前窗口融合到桌面（10）\n\n\nShift + Command + m\n将窗口移动到桌面（最后）\n\n\nShift + Command + b\n将窗口移动到桌面（上一个）\n\n\nShift + Command + n\n将窗口移动到桌面（下一个）\n\n\nShift + Command + 1\n将窗口移动到桌面（1）\n\n\nShift + Command + 2\n将窗口移动到桌面（2）\n\n\nShift + Command + 3\n将窗口移动到桌面（3）\n\n\nShift + Command + 4\n将窗口移动到桌面（4）\n\n\nShift + Command + 5\n将窗口移动到桌面（5）\n\n\nShift + Command + 6\n将窗口移动到桌面（6）\n\n\nAlt + Ctrl + f\n未知\n\n\nAlt + Ctrl + b\n未知\n\n\n\n\n\n\n（first）按键\n功能\n\n\n\n\nAlt + Command + a\n新建桌面\n\n\nAlt + a\n将当前窗口移动到新桌面\n\n\nAlt+ w\n删除桌面ß\n\n\n\n其他美化\nunixporn\n","categories":["Mac OS","工具学习"],"tags":["Mac OS"]}]